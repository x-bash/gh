# shellcheck shell=sh                   # xrc
# shellcheck disable=SC2039,3043

# author:       Li Junhao           l@x-cmd.com

xrc http param json str ui

# TODO: Precompile it into one file.
___x_cmd_gh_xrc(){
    local i
    for i in "$@"; do
    xrc "gh/lib/$i"
    # . "lib/$i"
    done
}

___x_cmd_gh_xrc  config token repo/main current utils user/main org/org_main

 
x log init gh

___x_cmd_gh(){
    param:dsl       '
subcommand:
    repo                                    "repo command"
    issue                                   "issue"
    pr                                      "pull request"
    current                                 "set current owner, repo"
    release                                 "release management"
    org                                     "manage org"
    tag                                     "repo tag"
    user                                    "user"
    config                                  "save, load, which"
    token                                   "set token"
'
    param:run

    if [ -z "${PARAM_SUBCMD}" ]; then
        echo "Command Not Found. Show help." >&2
        return 0
    fi

    case "${PARAM_SUBCMD}" in
        pr|release|member|tag)                                  "___x_cmd_gh_repo_${PARAM_SUBCMD}"   "$@"        ;;
        *)                                                      "___x_cmd_gh_${PARAM_SUBCMD}"  "$@"              ;;
    esac
}


############################
# Section 10: Instantiation
############################

____x_cmd_gh_make() {
    param:void
    local O_ORIGINAL=${1:?Provide client name by O environment}
    local O="___x_cmd_gh_$O_ORIGINAL"

    http "@$O"          make  'https://api.github.com'
    http "@$O_ORIGINAL" header Accept "application/vnd.github.v3+json"

    O=$O_ORIGINAL ___x_cmd_gh_config_load >/dev/null
    if [ $? -eq 0 ] && [ -n "$(O="$O_ORIGINAL" ___x_cmd_gh_token)" ]; then
        O="$O_ORIGINAL" ___x_cmd_gh_current_owner
    else
        gh_log info "token is null"
    fi
}

if [ -z "$DO_NOT_INIT_GITHUB_DEFAULT" ]; then
    ____x_cmd_gh_make "GITHUB_DEFAULT" && DO_NOT_INIT_GITHUB_DEFAULT="true"
fi

if [ -z "$XRC_NO_ADVISE" ] && [ -n "${BASH_VERSION}${ZSH_VERSION}" ] && [ "${-#*i}" != "$-" ]; then
    xrc advise/latest
    advise gh
fi
xrc setmain ___x_cmd_gh

